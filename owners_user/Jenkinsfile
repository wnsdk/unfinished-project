
pipeline{
    agent any

    environment {
        MODE = 'user'
        DOCKER_HUB_CRED = 'docker-hub-credential'
        GITHUB_CRED = 'github-credential'
    }
    
    stages{
        // github에서 repository clone 받기
        stage('Checkout') {
            steps {
                git branch: "main-${MODE}",
                    credentialsId: "${GITHUB_CRED}",
                    url: 'https://github.com/wnsdk/owners.git'
            }
        }

        // 프로덕트 빌드하기
        stage('Gradle Build'){
            steps{
                echo "mode : ${MODE}"
                dir("owners_${MODE}/"){
                    sh 'ls'
                    sh 'chmod +x ./gradlew'
                    sh './gradlew clean build'
                }
            }
        }

        // 도커 이미지 생성
        stage('Build Docker'){
            steps{
                script{
                    sh "docker build -t owners-${MODE}:${env.BUILD_NUMBER} owners_${MODE}/"
                    sh "docker tag owners-${MODE}:${env.BUILD_NUMBER} wnsdk/owners-${MODE}:${env.BUILD_NUMBER}"
                }
            }
        }

        stage('Push Docker to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: "${DOCKER_HUB_CRED}", usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                        sh "docker push wnsdk/owners:${env.BUILD_NUMBER}"
                        sh "docker image prune -a -f || true"
                    }
                }
            }
        }

        // stage('Update k8s Manifest') {
        //     steps {
        //         script {
        //             withCredentials([usernamePassword(credentialsId: "${GITHUB_CREDS}", usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_PASSWORD')]) {
        //                 sh "rm -rf allback-helm-chart"
        //                 sh "git clone https://github.com/wlwlsus/allback-helm-chart.git allback-helm-chart"
        //                 sh "ls -al"
        //                 dir('allback-helm-chart/concert') {
        //                     sh "sed -i 's|repository: .\\+|repository: wlwlsus/back-concert|' values.yaml"
        //                     sh "sed -i 's|tag: .\\+|tag: ${env.BUILD_NUMBER}|' values.yaml"
        //                     sh "git config user.email 'cadqe13@gmail.com'"
        //                     sh "git config user.name 'cadqe13'"
        //                     sh "git add ."
        //                     sh "git diff-index --quiet HEAD || git commit -m 'Update back-concert image to ${env.BUILD_NUMBER}'"
        //                     sh "git remote set-url origin https://$GITHUB_USERNAME:$GITHUB_PASSWORD@github.com/wlwlsus/allback-helm-chart.git"
        //                     sh "git push origin main"
        //                 }
        //             }
        //         }
        //     }
        // }
        
    }
}

// node {
//      stage('Clone repository') {
//          checkout scm
//      }
//      stage('Build image') {
//          app = docker.build("wnsdk/owners")
         
//      }
//      stage('Push image') {
//          docker.withRegistry('https://registry.hub.docker.com', 'docker-hub') {
//              app.push("${env.BUILD_NUMBER}")
//              app.push("latest")
//          }
//      }
// }
